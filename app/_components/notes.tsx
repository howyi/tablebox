/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/fCVv2eJghBb
 */
import {Input} from "@/app/_components/ui/input"
import {Button} from "@/app/_components/ui/button"
import {Card} from "@/app/_components/ui/card"
import {addNote, deleteNote, fetchNotes} from "@/app/_actions/bo/notes";
import React, {Suspense} from "react";
import {generate, count} from "random-words";
import {DeleteIcon} from "lucide-react";
import {TrashIcon} from "@heroicons/react/20/solid";

export function Notes() {
    return (
        <main className="flex flex-col items-center mt-10">
            <h1 className="text-2xl font-semibold mb-8">ノートを選択</h1>
            <div className="relative w-full max-w-md mb-6">
                <SearchIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400"/>
                <Input
                    className="pl-10 border border-gray-300 rounded-md w-full"
                    placeholder="ノートを検索する..."
                    type="search"
                    disabled={true}
                />
            </div>
            {/*<div className="w-full max-w-md mb-6">*/}
            {/*    <DropdownMenu>*/}
            {/*        <DropdownMenuTrigger asChild>*/}
            {/*            <Button>*/}
            {/*                <FilterIcon className="mr-2 w-5 h-5"/>*/}
            {/*                フィルター*/}
            {/*            </Button>*/}
            {/*        </DropdownMenuTrigger>*/}
            {/*        <DropdownMenuContent align="start" className="w-64">*/}
            {/*            <DropdownMenuLabel>並び替え</DropdownMenuLabel>*/}
            {/*            <DropdownMenuItem>作成日時: 新しい順</DropdownMenuItem>*/}
            {/*            <DropdownMenuItem>作成日時: 古い順</DropdownMenuItem>*/}
            {/*            <DropdownMenuItem>更新日時: 新しい順</DropdownMenuItem>*/}
            {/*            <DropdownMenuItem>更新日時: 古い順</DropdownMenuItem>*/}
            {/*        </DropdownMenuContent>*/}
            {/*    </DropdownMenu>*/}
            {/*</div>*/}
            <Suspense fallback={'loading...'}>
                <NoteList/>
            </Suspense>
            <form action={addNote}>
                <input
                    type="hidden"
                    name="slug"
                    id="slug"
                    value={generate()}
                />
                <Button className="mt-6" size="sm" type={"submit"}>
                    <PlusIcon className="mr-2 w-5 h-5"/>
                    ノートを追加する
                </Button>
            </form>
        </main>
    )
}

const NoteList: React.FC = async () => {
    const notes = await fetchNotes()
    return <div className="w-full max-w-md grid gap-6">
        {notes.map((n) => {
            return <a href={`/bo/${n.slug}`} key={n.id}>
                <Card className="p-4">
                    <div className="flex items-start">
                        <div className="flex-shrink-0 mr-3">
                            <img
                                alt="Thumbnail"
                                className="w-16 h-16 object-cover rounded-md"
                                height="100"
                                src="https://i.gyazo.com/1e654482ba74bc4f956f341129c2a0b2.png"
                                style={{
                                    aspectRatio: "100/100",
                                    objectFit: "cover",
                                }}
                                width="100"
                            />
                        </div>
                        <div>
                            <h3 className="text-lg font-semibold mb-2">{n.slug}</h3>
                        </div>
                        <form className="ml-auto" action={deleteNote}>
                            <input
                                type="hidden"
                                name="note_id"
                                id="note_id"
                                value={n.id}
                            />
                            <Button type={'submit'} className={'hover:bg-red-600 hover:text-white'}>
                                <TrashIcon className="w-5 h-5"/>
                            </Button>
                        </form>
                    </div>
                </Card>
            </a>
        })}
    </div>
}

function SearchIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <circle cx="11" cy="11" r="8"/>
            <path d="m21 21-4.3-4.3"/>
        </svg>
    )
}


function FilterIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"/>
        </svg>
    )
}


function PlusIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <path d="M5 12h14"/>
            <path d="M12 5v14"/>
        </svg>
    )
}
