/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/fCVv2eJghBb
 */
import {Input} from "@/app/_components/ui/input"
import {Button} from "@/app/_components/ui/button"
import {Card} from "@/app/_components/ui/card"
import React, {Suspense} from "react";
import {addPage, deletePage, fetchPages} from "@/app/_actions/bo/pages";
import {generate} from "random-words";
import {deleteNote} from "@/app/_actions/bo/notes";
import {ArrowRightIcon, TrashIcon} from "@heroicons/react/20/solid";
import {SubmitButton} from "@/app/_components/submit-button";

export const Pages: React.FC<{ note_slug: string }> = (params) => {
    return (
        <main className="flex flex-col items-center mt-10">
            <nav aria-label="breadcrumb" className="mb-4">
                <ol className="flex items-center space-x-2">
                    <li>
                        <a className="text-sm text-gray-500" href="/bo">
                            BO
                        </a>
                    </li>
                    <ArrowRightIcon className="w-4 h-4 text-gray-500"/>
                    <li>
                        <a className="text-sm text-gray-500" href={`/bo/${params.note_slug}`}>
                            {params.note_slug}
                        </a>
                    </li>
                </ol>
            </nav>
            {/*<div className="relative w-full max-w-md mb-6">*/}
            {/*    <SearchIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400"/>*/}
            {/*    <Input*/}
            {/*        className="pl-10 border border-gray-300 rounded-md w-full"*/}
            {/*        placeholder="ページを検索する..."*/}
            {/*        type="search"*/}
            {/*        disabled={true}*/}
            {/*    />*/}
            {/*</div>*/}
            <form action={addPage}>
                <input
                    type="hidden"
                    name="note_slug"
                    id="note_slug"
                    value={params.note_slug}
                />
                <input
                    type="hidden"
                    name="page_slug"
                    id="page_slug"
                    value={generate()}
                />
                <SubmitButton className="my-6" size="sm">
                    <PlusIcon className="mr-2 w-5 h-5"/>
                    ページを追加する
                </SubmitButton>
            </form>
            {/*<div className="w-full max-w-md mb-6">*/}
            {/*    <DropdownMenu>*/}
            {/*        <DropdownMenuTrigger asChild>*/}
            {/*            <Button>*/}
            {/*                <FilterIcon className="mr-2 w-5 h-5"/>*/}
            {/*                フィルター*/}
            {/*            </Button>*/}
            {/*        </DropdownMenuTrigger>*/}
            {/*        <DropdownMenuContent align="start" className="w-64">*/}
            {/*            <DropdownMenuLabel>並び替え</DropdownMenuLabel>*/}
            {/*            <DropdownMenuItem>作成日時: 新しい順</DropdownMenuItem>*/}
            {/*            <DropdownMenuItem>作成日時: 古い順</DropdownMenuItem>*/}
            {/*            <DropdownMenuItem>更新日時: 新しい順</DropdownMenuItem>*/}
            {/*            <DropdownMenuItem>更新日時: 古い順</DropdownMenuItem>*/}
            {/*        </DropdownMenuContent>*/}
            {/*    </DropdownMenu>*/}
            {/*</div>*/}
            <Suspense fallback={'loading...'}>
                <PageList note_slug={params.note_slug}/>
            </Suspense>
        </main>
    )
}

const PageList: React.FC<{ note_slug: string }> = async ({note_slug}) => {
    const noteWithPages = await fetchPages(note_slug)
    return <div
        className="w-full max-w-screen-2xl grid xl:grid-cols-8 lg:grid-cols-6 md:grid-cols-4 grid-cols-2 gap-4 px-4">
        {noteWithPages.pages.map((p) => {
            return <a href={`/bo/${noteWithPages.note.slug}/${p.slug}`} key={p.id}>
                <Card className="w-full h-0 pb-full">
                    <div className="flex items-start p-4">
                        <div>
                            <h3 className="text-lg font-semibold mb-2">{p.slug}</h3>
                            <pre className="text-sm text-gray-500">
                            {p.body_text}
                        </pre>
                        </div>
                        <form className="ml-auto" action={deletePage}>
                            <input
                                type="hidden"
                                name="note_id"
                                id="note_id"
                                value={noteWithPages.note.id}
                            />
                            <input
                                type="hidden"
                                name="page_id"
                                id="page_id"
                                value={p.id}
                            />
                            <SubmitButton className={'hover:bg-red-600 hover:text-white'}>
                                <TrashIcon className="w-5 h-5"/>
                            </SubmitButton>
                        </form>
                    </div>
                </Card>
            </a>
        })}
    </div>
}

function SearchIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <circle cx="11" cy="11" r="8"/>
            <path d="m21 21-4.3-4.3"/>
        </svg>
    )
}


function FilterIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"/>
        </svg>
    )
}


function PlusIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <path d="M5 12h14"/>
            <path d="M12 5v14"/>
        </svg>
    )
}
